{"version":3,"sources":["spms/SpmsList.js","App.js","serviceWorker.js","index.js"],"names":["SpmsList","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","symbols","value","e","i","preventDefault","addstocks","removeportfolio","x","removeStock","changeToEuro","changeToUSD","_this2","react_default","a","createElement","portfolio","map","stocks","index","className","onClick","handlePortfolioDelete","name","href","handleEuroChange","handleUSDChange","st","idx","key","stock","price","Currency","Quantity","Total","handleStockDelete","reduce","b","parseFloat","handelstock","type","Component","App","createPortfolio","bind","assertThisInitialized","totalValue","addStock","stockname","prompt","length","url","concat","axios","get","then","res","push","data","Number","toFixed","setState","localStorage","setItem","JSON","stringify","alert","console","log","event","addportfolio","person","splice","_this3","_loop","_this4","_loop2","hasOwnProperty","getItem","parse","defineProperty","hydrateStateWithLocalStorage","spms_SpmsList","symbol","Boolean","window","location","hostname","match","ReactDOM","render","BrowserRouter","Route","path","component","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2ca26e27.chunk.js","sourcesContent":["import {Component} from \"react\";\nimport React from \"react\";\nimport '../App.css';\n\n\n\n\n\n\nclass SpmsList extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            symbols: [],\n            value: '',\n        }\n\n    };\n\n    handelstock(e, i) {\n        e.preventDefault();\n\n        this.props.addstocks(i)\n    }\n\n    handlePortfolioDelete(e, i) {\n        e.preventDefault();\n\n        this.props.removeportfolio(i)\n    }\n\n    handleStockDelete(e, i,x){\n        e.preventDefault();\n\n        this.props.removeStock(i,x)\n    }\n\n    handleEuroChange(e, i){\n        e.preventDefault();\n\n        this.props.changeToEuro(i)\n    }\n\n    handleUSDChange(e, i){\n        e.preventDefault();\n\n        this.props.changeToUSD(i)\n    }\n\n\n\n    render() {\n        return (\n            <div>\n                {this.props.portfolio.map((stocks, index) => {\n\n                    return (\n\n                        <div className=\"col-3\" >\n                            <button onClick={(stocks) => this.handlePortfolioDelete(stocks, index)}>&#x274E;</button>\n                            <div>\n                                <p>{stocks[0].name}<a href=\"#\" onClick={(stocks) => this.handleEuroChange(stocks, index)}>\n                                    Show in â‚¬</a> <a href=\"#\"  onClick={(stocks) => this.handleUSDChange(stocks, index)}>\n                                    Show in $</a></p>\n\n                                    <table className=\"table table-bordered\">\n                                        <thead>\n                                        <tr>\n                                            <th>Name</th>\n                                            <th>Unit value</th>\n                                            <th>Quantity</th>\n                                            <th>Total value</th>\n                                            \n                                        </tr>\n                                        </thead>\n                                        {stocks[1].map((st,idx) =>{\n                                            return (\n\n                                                <tbody key={idx} >\n                                                <tr >\n                                                    <td>{st.stock}</td>\n                                                    <td>{st.price} {st.Currency}</td>\n                                                    <td>{st.Quantity}</td>\n                                                    <td>{st.Total} {st.Currency}</td>\n                                                    <td><button onClick={(stocks) => this.handleStockDelete(stocks, idx,index)}>&#x274E; </button></td>\n                                                </tr>\n                                                </tbody>\n                                            )\n                                        })}\n                                        </table>\n\n\n                                            <p>Total value of {stocks[0].name}: {stocks[2].reduce((a, b) => parseFloat(a) + parseFloat(b), 0)} </p>\n\n                                <input className=\"add\" onClick={(stocks) => this.handelstock(stocks, index)} type=\"button\"\n                                       value=\"Add stock\"\n                                       />\n                                <input value=\"Perf graph\" type=\"button\"/>\n                            </div>\n\n\n\n                        </div>\n                    );\n                })}\n            </div>\n        );\n    }\n}\n\nexport default SpmsList;","import React, { Component } from 'react';\nimport SpmsList from './spms/SpmsList';\nimport './App.css';\nimport axios from \"axios\";\nimport { BrowserRouter as Router } from 'react-router-dom';\n\n\n\n\n\nclass App extends Component {\n    constructor (props) {\n        super(props)\n        this.createPortfolio = this.createPortfolio.bind(this);\n        this.removeportfolio = this.removeportfolio.bind(this);\n        this.addstocks = this.addstocks.bind(this);\n        this.removeStock = this.removeStock.bind(this);\n        this.changeToEuro = this.changeToEuro.bind(this);\n        this.changeToUSD = this.changeToUSD.bind(this);\n        this.state = {\n\n            portfolio: [],\n            totalValue: [],\n\n        }\n\n    }\n    addstocks(i){\n        let addStock = this.state.portfolio;\n        let stockname = prompt(\"Enter symbole of the stock you want to add\");\n        let Quantity =  prompt(\"Enter the amount of share you would like to buy\");\n        if(stockname != null){\n            if (addStock[i][1].length <= 49){\n                const key = 'AAIUPSWSMLJBOES3';\n                const url = `https://www.alphavantage.co/query?function=GLOBAL_QUOTE&symbol=${stockname}&apikey=${key}`;\n                axios.get(url)\n                    .then(res => {\n                        addStock[i][1].push({\n                            stock: res.data['Global Quote']['01. symbol'],\n                            price: res.data['Global Quote']['05. price'],\n                            Quantity: Quantity,\n                            Total: (Number(Quantity)* res.data['Global Quote']['05. price']).toFixed(2),\n                            Currency: \"$\"\n                        });\n\n                        addStock[i][2].push(Number(Quantity)* res.data['Global Quote']['05. price']);\n                        this.setState({\n                            portfolio:addStock,\n                        });\n                        localStorage.setItem(\"portfolio\", JSON.stringify(addStock));\n                    });\n\n            }\n\n            else {\n                alert('You have reached max number of stocks ');\n            }\n\n        }\n        console.log(addStock)\n\n    }\n    createPortfolio(event){\n        event.preventDefault();\n        \n        let addportfolio = this.state.portfolio;\n        let name = [];\n        const person = prompt(\"Please enter Portfolio name\", \"\");\n        if ( person != null){\n            if (addportfolio.length<= 9){\n                name.push ({name:person},[],[]);\n                addportfolio.push(name);\n                this.setState ({\n                    portfolio: addportfolio,\n                });\n            }\n            else {\n                alert('You have reached max number of portfolio ');\n            }\n        }\n        console.log(addportfolio);\n        localStorage.setItem(\"portfolio\", JSON.stringify(addportfolio));\n    }\n\n\n    removeportfolio(i){\n        let portfolio = this.state.portfolio;\n        portfolio.splice(i,1);\n\n        this.setState({\n            portfolio: portfolio\n        });\n        localStorage.setItem(\"portfolio\", JSON.stringify(portfolio));\n    }\n\n    removeStock(i,x){\n        let portfolio = this.state.portfolio;\n        portfolio[x][1].splice(i,1);\n        portfolio[x][2].splice(i,1);\n        console.log(i);\n\n        this.setState({\n            portfolio: portfolio\n        });\n        localStorage.setItem(\"portfolio\", JSON.stringify(portfolio));\n    }\n    changeToEuro(i){\n        let portfolio = this.state.portfolio;\n        let stocks = portfolio[i][1];\n        let totalValue = portfolio[i][2];\n\n        const url = `https://www.alphavantage.co/query?function=CURRENCY_EXCHANGE_RATE&from_currency=USD&to_currency=EUR&apikey=AAIUPSWSMLJBOES3`;\n\n        for (let x = 0; x < stocks.length;  x++){\n            if (stocks[x].Currency === \"$\"){\n\n                axios.get(url)\n                    .then(res => {\n                        stocks[x].price = (stocks[x].price * res.data['Realtime Currency Exchange Rate']['5. Exchange Rate']).toFixed(2);\n                        stocks[x].Total = (stocks[x].Total * res.data['Realtime Currency Exchange Rate']['5. Exchange Rate']).toFixed(2);\n                        stocks[x].Currency = \"â‚¬\";\n                        totalValue[x] = (Number(totalValue[x]) * res.data['Realtime Currency Exchange Rate']['5. Exchange Rate']).toFixed(2);\n                         \n\n                         this.setState ({\n                             portfolio: portfolio,\n                         });\n                         //localStorage.setItem(\"portfolio\", JSON.stringify(portfolio));\n\n                    });\n            }\n        }\n    }\n    changeToUSD(i){\n        let portfolio = this.state.portfolio;\n        let stocks = portfolio[i][1];\n        let totalValue = portfolio[i][2];\n\n        const url = `https://www.alphavantage.co/query?function=CURRENCY_EXCHANGE_RATE&from_currency=EUR&to_currency=USD&apikey=AAIUPSWSMLJBOES3`;\n\n        for (let x = 0; x < stocks.length;  x++){\n            if (stocks[x].Currency === \"â‚¬\"){\n\n                axios.get(url)\n                    .then(res => {\n                        stocks[x].price = (stocks[x].price * res.data['Realtime Currency Exchange Rate']['5. Exchange Rate']).toFixed(2);\n                        stocks[x].Total = (stocks[x].Total * res.data['Realtime Currency Exchange Rate']['5. Exchange Rate']).toFixed(2);\n                        stocks[x].Currency = \"$\";\n                        totalValue[x] = (Number(totalValue[x]) * res.data['Realtime Currency Exchange Rate']['5. Exchange Rate']).toFixed(2);\n                           console.log(totalValue.length)\n                         this.setState ({\n                             portfolio: portfolio,\n                         });\n                           //localStorage.setItem(\"portfolio\", JSON.stringify(portfolio));\n\n                    });\n            }\n        }\n    }\n\n    hydrateStateWithLocalStorage() {\n        // for all items in state\n        for (let key in this.state) {\n            // if the key exists in localStorage\n            if (localStorage.hasOwnProperty(key)) {\n                // get the key's value from localStorage\n                let value = localStorage.getItem(key);\n\n                // parse the localStorage string and setState\n                try {\n                    value = JSON.parse(value);\n                    this.setState({ [key]: value });\n                } catch (e) {\n                    // handle empty string\n                    this.setState({ [key]: value });\n                }\n            }\n        }\n    }\n    componentDidMount() {\n        this.hydrateStateWithLocalStorage();\n    }\n\n    render() {\n    return (\n\n\n            <div className = \"container\">\n\n                <input className=\"add\" onClick={this.createPortfolio} type=\"button\" value=\"Add new portfolio\"/>\n               <SpmsList  portfolio ={this.state.portfolio}\n                          removeportfolio = {this.removeportfolio}\n                          name ={this.state.name}\n                          addstocks ={this.addstocks}\n                          symbols = {this.state.symbol}\n                          removeStock = {this.removeStock}\n                          changeToEuro = {this.changeToEuro}\n                          changeToUSD = {this.changeToUSD}\n                          />\n\n\n            </div>\n\n\n\n\n\n\n                    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\n\n\n\n\nReactDOM.render((<Router><Route path=\"/\" component={App}>\n</Route>\n</Router>), document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}